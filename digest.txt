Directory structure:
└── planora-semiauto/
    └── backend/
        ├── classroom.py
        ├── constraints.py
        ├── main.py
        ├── sample.json
        ├── subject.py
        ├── teacher.json
        └── teacher.py

================================================
FILE: backend/classroom.py
================================================
class Classroom:
    def __init__(self, classroom_id, name, subject_details, classroomSchedule):
        self.classroom_id = classroom_id
        self.name = name
        self.subject_details = subject_details
        self.classroomSchedule = classroomSchedule

    def info_getter(self):
        return {
            "classroom_id": self.classroom_id,
            "name": self.name,
            "subject_details": self.subject_details,
            "classroomSchedule": self.classroomSchedule
        }

    def classroom_is_free(self, day, period):
        """Returns True if the classroom is free at the given day and period."""
        return self.classroomSchedule[day][period] is None

    def add_classroom_schedule(self, day, period, subject, teacher):
        """Adds the classroom schedule for the given day and period."""
        period_details = {
            "subject": subject,
            "teacher": teacher,
        }
        self.classroomSchedule[day][period] = period_details



================================================
FILE: backend/constraints.py
================================================
    


================================================
FILE: backend/main.py
================================================
import json
import random
from teacher import Teacher
from classroom import Classroom
from subject import Subject


def load_data(filename):
    """Loads a JSON file."""
    try:
        with open(filename, 'r') as f:
            return json.load(f)
    except FileNotFoundError:
        print(f"Error: {filename} not found. Check path.")
        return {}


def init_teachers(teacher_data):
    """Initializes Teacher objects from the loaded data."""
    teachers_map = {}
    for data in teacher_data.values():
        teacher_Obx = Teacher(
            teacher_id=data['teacher_id'],
            name=data['name'],
            mail=f"{data['teacher_id']}@gmail.com",
            subjects=data['subject'],
        )

        teachers_map[data['teacher_id']] = teacher_Obx

    return teachers_map


def init_classroom(classroom_data):
    """Initializes Classroom objects from the loaded data."""

    classroom_map = {}

    for data in classroom_data.values():
        classroom_Obx = Classroom(
            classroom_id=data['classroom_id'],
            name=data['classroom'],
            subject_details=data['subject_details'],
            classroomSchedule=data['allocation']
        )

        classroom_map[data['classroom_id']] = classroom_Obx

    return classroom_map


def main():
    teacher_raw_data = load_data('backend/teacher.json')
    classroom_raw_data = load_data('backend/sample.json')

    teachers_map = init_teachers(teacher_raw_data)
    classroom_map = init_classroom(classroom_raw_data)

    # for teacher_obj in teachers_map.values():
    #     print(teacher_obj.info_getter())

    # for classroom_obj in classroom_map.values():
    #     print(classroom_obj.info_getter())


if __name__ == "__main__":
    main()



================================================
FILE: backend/sample.json
================================================
{
    "1": {
        "classroom_id": 1,
        "classroom": "CSE S7 R1",
        "subject_details": {
            "Mathematics": 5,
            "Physics": 3,
            "Assembly": 3,
            "History": 4,
            "Art": 5,
            "Computer Science": 5,
            "English": 5
        },
        "admin_email": "shibinikka@gmail.com",
        "allocation": [
            [
                [
                    {
                        "subject": "Mathematics",
                        "teacher_id": 1
                    },
                    {
                        "subject": "Physics",
                        "teacher_id": 4
                    },
                    {
                        "subject": "Assembly",
                        "teacher_id": 5
                    }
                ],
                [
                    {
                        "subject": "History",
                        "teacher_id": 3
                    }
                ],
                null,
                [
                    {
                        "subject": "English",
                        "teacher_id": 2
                    },
                    {
                        "subject": "Chemistry",
                        "teacher_id": 1
                    }
                ],
                null,
                [
                    {
                        "subject": "Art",
                        "teacher_id": 3
                    }
                ]
            ],
            [
                null,
                [
                    {
                        "subject": "Mathematics",
                        "teacher_id": 5
                    }
                ],
                [
                    {
                        "subject": "Art",
                        "teacher_id": 3
                    },
                    {
                        "subject": "Computer Science",
                        "teacher_id": 5
                    }
                ],
                null,
                null,
                null
            ],
            [
                null,
                null,
                null,
                null,
                null,
                null
            ],
            [
                null,
                null,
                null,
                null,
                null,
                null
            ],
            [
                null,
                null,
                null,
                null,
                null,
                null
            ]
        ]
    },
    "2": {
        "classroom_id": 2,
        "classroom": "CSE S7 R2",
        "admin_email": "sdtheevandi@gmail.com",
        "subject_details": {
            "Mathematics": 5,
            "Physics": 3,
            "Assembly": 3,
            "History": 4,
            "Art": 5,
            "Computer Science": 5,
            "English": 5
        },
        "allocation": [
            [
                null,
                null,
                null,
                null,
                null,
                null
            ],
            [
                null,
                null,
                null,
                null,
                null,
                null
            ],
            [
                null,
                null,
                null,
                null,
                null,
                null
            ],
            [
                null,
                null,
                null,
                null,
                null,
                null
            ],
            [
                null,
                null,
                null,
                null,
                null,
                null
            ]
        ]
    }
}


================================================
FILE: backend/subject.py
================================================
class Subject:
    def __init__(self, subject_id, name):
        self.subject_id = subject_id
        self.name = name
        # self.is_lab = is_lab

    def info_getter(self):
        return {
            "subject_id": self.subject_id,
            "name": self.name,
            # "is_lab": self.is_lab,
            "periods_per_session": self.periods_per_session
        }

    def is_lab_subject(self):
        """Returns True if the subject requires consecutive lab periods."""
        return self.is_lab



================================================
FILE: backend/teacher.json
================================================
{
    "1": {
        "teacher_id": 1,
        "name": "John Doe",
        "subject": [
            "Mathematics",
            "Physics",
            "Chemistry"
        ]
    },
    "2": {
        "teacher_id": 2,
        "name": "Jane Doe",
        "subject": [
            "Mathematics",
            "English",
            "Chemistry"
        ]
    },
    "3": {
        "teacher_id": 3,
        "name": "Jim Doe",
        "subject": [
            "English",
            "History",
            "Biology"
        ]
    },
    "4": {
        "teacher_id": 4,
        "name": "Jill Doe",
        "subject": [
            "Physics",
            "Chemistry",
            "Biology"
        ]
    },
    "5": {
        "teacher_id": 5,
        "name": "Jack Doe",
        "subject": [
            "Computer Science",
            "Mathematics",
            "Physics"
        ]
    }
}


================================================
FILE: backend/teacher.py
================================================
class Teacher:
    def __init__(self, teacher_id, name, mail, subjects):
        self.teacher_id = teacher_id
        self.name = name
        self.mail = mail
        self.subjects = subjects
        self.teacherSchedule = [[None for _ in range(6)] for _ in range(5)]

    def info_getter(self):
        return {
            "teacher_id": self.teacher_id,
            "name": self.name,
            "mail": self.mail,
            "subjects": self.subjects,
            "teacherSchedule": self.teacherSchedule
        }

    def teacher_is_free(self, day, period):
        """Returns True if the teacher is free at the given day and period."""
        return self.teacherSchedule[day][period] is None

    def add_teacher_schedule(self, day, period, classroom, subject):
        """Adds the teacher schedule for the given day and period."""
        period_details = {
            "classroom": classroom,
            "subject": subject,
        }
        self.teacherSchedule[day][period] = period_details


